# generate an elixir project with
mix new file_name

# Elixir is a functional programming language, not an OOP language
# Elixir is better, modern Erlang. Fast and easy to write
# Elixir features Pattern Matching which is a technique where you test an expression to determine if it has certain characteristics

# To grab the first element with pattern matching
iex> [first_element|_] = [1, 2, 3]
[1, 2, 3]
iex> first_element
1

# To open the Elixir shell, go into the project and type
iex -S mix

# To close the Elixir shell type
Ctrl + c, a

# To compile the changes made in the Elixir shell
iex> recompile
or
iex> recompile force: true
open
# arity = number of arguments
# functions can have the same name as long as there are different number of arguements (function overloading)

# Elixir features Piping
# The pipe operator |> passes the result of an expression as the first parameter of another expression.

# using if statements in Elixir is bad practice. Use switch statements instead

# Elixir features automatic documentation generation with @moduledoc and @doc expressions in the elixir file
# the hashtag or pound symbol is used for inline documentation

# test cases are stored in the test folder and can be ran with
mix test

# assert keyword used to confirm whether the value is true
# refute keyword used to confirm whether the value is false (using assert != is bad)

# doctests are extra swag, they are tests within the module. You can find them in the doc comments under examples. The sample code will run in the test run. This will only work if written in a specific way, double hashtag, the word Examples and then double/triple indent before the command

# doctest will be enabled with a line within module_name_test.exs
doctest module_name

# Elixir can help create docs in html form with
mix docs

# the html files will be located in doc directory
